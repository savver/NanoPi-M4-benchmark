
sbc-bench v0.7.1

Installing needed tools. This may take some time... Done.
Checking cpufreq OPP... Done.
Executing tinymembench. This will take a long time... Done.
Executing OpenSSL benchmark. This will take 3 minutes... Done.
Executing 7-zip benchmark. This will take a long time... Done.
Executing cpuminer. This will take 5 minutes... Done.
Checking cpufreq OPP... Done.

Memory performance (big.LITTLE cores measured individually):
memcpy: 1470.9 MB/s 
memset: 4736.6 MB/s 
memcpy: 2872.8 MB/s (0.2%)
memset: 4835.5 MB/s (0.6%)

Cpuminer total scores (5 minutes execution): 9.56,9.55,9.54,9.53,9.52,9.50,9.49,9.48,9.46,9.45,9.43,9.40,9.28 kH/s

7-zip total scores (3 consecutive runs): 6094,6026,6151

OpenSSL results (big.LITTLE cores measured individually):
type             16 bytes     64 bytes    256 bytes   1024 bytes   8192 bytes  16384 bytes
aes-128-cbc     124059.79k   366771.07k   705389.48k   944110.59k  1053627.73k  1054130.18k
aes-128-cbc     358566.85k   808093.50k  1160590.25k  1280463.19k  1345404.93k  1349140.48k
aes-192-cbc     118391.59k   327252.20k   577606.40k   731893.08k   793070.25k   797037.91k
aes-192-cbc     337197.56k   739438.36k   985974.19k  1133392.21k  1182337.71k  1180303.36k
aes-256-cbc     114265.19k   301620.20k   500587.52k   612428.12k   654723.75k   657320.62k
aes-256-cbc     325899.46k   670990.81k   905224.53k   977886.55k  1018301.10k  1017380.86k

Unable to upload full test results. Please copy&paste the below stuff to pastebin.com and
provide the URL. Check the output for throttling and swapping please.


sbc-bench v0.7.1 FriendlyElec NanoPi M4 (Wed, 15 Apr 2020 02:26:57 +0000)

Distributor ID:	Ubuntu
Description:	Ubuntu 18.04.2 LTS
Release:	18.04
Codename:	bionic
Architecture:	arm64

/usr/bin/gcc (Ubuntu/Linaro 7.4.0-1ubuntu1~18.04) 7.4.0

Uptime: 02:26:57 up  1:55,  1 user,  load average: 0.07, 2.31, 3.15

Linux 4.4.179 (NanoPi-M4) 	04/15/20 	_aarch64_	(6 CPU)

avg-cpu:  %user   %nice %system %iowait  %steal   %idle
          26.93    0.00    0.34    0.15    0.00   72.58

Device             tps    kB_read/s    kB_wrtn/s    kB_read    kB_wrtn
loop0             0.00         0.00         0.00          8          0
mmcblk0           1.42        42.48         4.18     293926      28948

              total        used        free      shared  buff/cache   available
Mem:           1.9G        287M        1.3G         17M        291M        1.5G
Swap:            0B          0B          0B



##########################################################################

Checking cpufreq OPP for cpu0-cpu3:

Cpufreq OPP: 1416    Measured: 1405.864/1390.693/1403.602
Cpufreq OPP: 1200    Measured: 1186.368/1191.156/1191.156
Cpufreq OPP: 1008    Measured: 999.944/998.036/997.663
Cpufreq OPP:  816    Measured: 807.499/805.502/805.816
Cpufreq OPP:  600    Measured: 590.132/587.902/589.068
Cpufreq OPP:  408    Measured: 398.231/399.090/400.724

Checking cpufreq OPP for cpu4-cpu5:

Cpufreq OPP: 1800    Measured: 1793.471/1793.312/1793.212
Cpufreq OPP: 1608    Measured: 1600.781/1602.032/1601.893
Cpufreq OPP: 1416    Measured: 1409.762/1409.024/1409.301
Cpufreq OPP: 1200    Measured: 1192.710/1193.578/1193.454
Cpufreq OPP: 1008    Measured: 1001.677/739.179/903.186
Cpufreq OPP:  816    Measured: 809.566/810.449/810.191
Cpufreq OPP:  600    Measured: 593.596/593.749/593.709
Cpufreq OPP:  408    Measured: 401.218/401.085/401.295

##########################################################################

Executing tinymembench on a little core:

tinymembench v0.4.9 (simple benchmark for memory throughput and latency)

==========================================================================
== Memory bandwidth tests                                               ==
==                                                                      ==
== Note 1: 1MB = 1000000 bytes                                          ==
== Note 2: Results for 'copy' tests show how many bytes can be          ==
==         copied per second (adding together read and writen           ==
==         bytes would have provided twice higher numbers)              ==
== Note 3: 2-pass copy means that we are using a small temporary buffer ==
==         to first fetch data into it, and only then write it to the   ==
==         destination (source -> L1 cache, L1 cache -> destination)    ==
== Note 4: If sample standard deviation exceeds 0.1%, it is shown in    ==
==         brackets                                                     ==
==========================================================================

 C copy backwards                                     :   1365.2 MB/s (0.8%)
 C copy backwards (32 byte blocks)                    :   1398.3 MB/s (0.3%)
 C copy backwards (64 byte blocks)                    :   1390.8 MB/s (0.5%)
 C copy                                               :   1452.9 MB/s (0.5%)
 C copy prefetched (32 bytes step)                    :   1079.7 MB/s (0.2%)
 C copy prefetched (64 bytes step)                    :   1163.6 MB/s
 C 2-pass copy                                        :   1261.6 MB/s (0.8%)
 C 2-pass copy prefetched (32 bytes step)             :    768.4 MB/s (2.2%)
 C 2-pass copy prefetched (64 bytes step)             :    663.8 MB/s
 C fill                                               :   4738.2 MB/s (0.4%)
 C fill (shuffle within 16 byte blocks)               :   4733.6 MB/s
 C fill (shuffle within 32 byte blocks)               :   4736.2 MB/s
 C fill (shuffle within 64 byte blocks)               :   4737.3 MB/s
 ---
 standard memcpy                                      :   1470.9 MB/s
 standard memset                                      :   4736.6 MB/s
 ---
 NEON LDP/STP copy                                    :   1514.0 MB/s
 NEON LDP/STP copy pldl2strm (32 bytes step)          :    977.3 MB/s (4.9%)
 NEON LDP/STP copy pldl2strm (64 bytes step)          :   1106.3 MB/s (0.2%)
 NEON LDP/STP copy pldl1keep (32 bytes step)          :   1469.3 MB/s
 NEON LDP/STP copy pldl1keep (64 bytes step)          :   1468.7 MB/s (0.7%)
 NEON LD1/ST1 copy                                    :   1317.2 MB/s (0.8%)
 NEON STP fill                                        :   4744.6 MB/s (0.2%)
 NEON STNP fill                                       :   3282.9 MB/s (2.4%)
 ARM LDP/STP copy                                     :   1515.3 MB/s (0.2%)
 ARM STP fill                                         :   4739.1 MB/s
 ARM STNP fill                                        :   3263.9 MB/s (1.8%)

==========================================================================
== Memory latency test                                                  ==
==                                                                      ==
== Average time is measured for random memory accesses in the buffers   ==
== of different sizes. The larger is the buffer, the more significant   ==
== are relative contributions of TLB, L1/L2 cache misses and SDRAM      ==
== accesses. For extremely large buffer sizes we are expecting to see   ==
== page table walk with several requests to SDRAM for almost every      ==
== memory access (though 64MiB is not nearly large enough to experience ==
== this effect to its fullest).                                         ==
==                                                                      ==
== Note 1: All the numbers are representing extra time, which needs to  ==
==         be added to L1 cache latency. The cycle timings for L1 cache ==
==         latency can be usually found in the processor documentation. ==
== Note 2: Dual random read means that we are simultaneously performing ==
==         two independent memory accesses at a time. In the case if    ==
==         the memory subsystem can't handle multiple outstanding       ==
==         requests, dual random read has the same timings as two       ==
==         single reads performed one after another.                    ==
==========================================================================

block size : single random read / dual random read, [MADV_NOHUGEPAGE]
      1024 :    0.0 ns          /     0.0 ns 
      2048 :    0.0 ns          /     0.0 ns 
      4096 :    0.0 ns          /     0.0 ns 
      8192 :    0.0 ns          /     0.0 ns 
     16384 :    0.0 ns          /     0.0 ns 
     32768 :    0.1 ns          /     0.1 ns 
     65536 :    4.9 ns          /     8.3 ns 
    131072 :    7.5 ns          /    11.5 ns 
    262144 :    9.0 ns          /    13.1 ns 
    524288 :   30.4 ns          /    42.6 ns 
   1048576 :  148.2 ns          /   212.8 ns 
   2097152 :  197.6 ns          /   253.6 ns 
   4194304 :  224.7 ns          /   273.0 ns 
   8388608 :  240.2 ns          /   281.8 ns 
  16777216 :  249.0 ns          /   287.6 ns 
  33554432 :  253.7 ns          /   292.0 ns 
  67108864 :  260.5 ns          /   300.6 ns 

block size : single random read / dual random read, [MADV_HUGEPAGE]
      1024 :    0.0 ns          /     0.0 ns 
      2048 :    0.0 ns          /     0.0 ns 
      4096 :    0.0 ns          /     0.0 ns 
      8192 :    0.0 ns          /     0.0 ns 
     16384 :    0.0 ns          /     0.0 ns 
     32768 :    0.1 ns          /     0.1 ns 
     65536 :    4.9 ns          /     8.2 ns 
    131072 :    7.5 ns          /    11.5 ns 
    262144 :    9.0 ns          /    12.9 ns 
    524288 :   23.8 ns          /    34.2 ns 
   1048576 :  140.7 ns          /   208.3 ns 
   2097152 :  195.5 ns          /   252.6 ns 
   4194304 :  217.9 ns          /   265.9 ns 
   8388608 :  230.3 ns          /   270.8 ns 
  16777216 :  235.5 ns          /   272.3 ns 
  33554432 :  238.3 ns          /   273.0 ns 
  67108864 :  239.6 ns          /   273.3 ns 

Executing tinymembench on a big core:

tinymembench v0.4.9 (simple benchmark for memory throughput and latency)

==========================================================================
== Memory bandwidth tests                                               ==
==                                                                      ==
== Note 1: 1MB = 1000000 bytes                                          ==
== Note 2: Results for 'copy' tests show how many bytes can be          ==
==         copied per second (adding together read and writen           ==
==         bytes would have provided twice higher numbers)              ==
== Note 3: 2-pass copy means that we are using a small temporary buffer ==
==         to first fetch data into it, and only then write it to the   ==
==         destination (source -> L1 cache, L1 cache -> destination)    ==
== Note 4: If sample standard deviation exceeds 0.1%, it is shown in    ==
==         brackets                                                     ==
==========================================================================

 C copy backwards                                     :   2895.2 MB/s (0.9%)
 C copy backwards (32 byte blocks)                    :   2897.0 MB/s (0.7%)
 C copy backwards (64 byte blocks)                    :   2888.1 MB/s (0.3%)
 C copy                                               :   2778.1 MB/s (0.2%)
 C copy prefetched (32 bytes step)                    :   2798.7 MB/s (0.3%)
 C copy prefetched (64 bytes step)                    :   2791.1 MB/s
 C 2-pass copy                                        :   2567.4 MB/s (0.2%)
 C 2-pass copy prefetched (32 bytes step)             :   2575.5 MB/s
 C 2-pass copy prefetched (64 bytes step)             :   2592.3 MB/s (0.3%)
 C fill                                               :   4834.8 MB/s (0.3%)
 C fill (shuffle within 16 byte blocks)               :   4838.1 MB/s (0.4%)
 C fill (shuffle within 32 byte blocks)               :   4838.1 MB/s (0.5%)
 C fill (shuffle within 64 byte blocks)               :   4843.6 MB/s (0.4%)
 ---
 standard memcpy                                      :   2872.8 MB/s (0.2%)
 standard memset                                      :   4835.5 MB/s (0.6%)
 ---
 NEON LDP/STP copy                                    :   2856.9 MB/s (0.2%)
 NEON LDP/STP copy pldl2strm (32 bytes step)          :   2883.0 MB/s (0.2%)
 NEON LDP/STP copy pldl2strm (64 bytes step)          :   2882.8 MB/s (0.2%)
 NEON LDP/STP copy pldl1keep (32 bytes step)          :   2793.0 MB/s (1.0%)
 NEON LDP/STP copy pldl1keep (64 bytes step)          :   2801.1 MB/s (0.2%)
 NEON LD1/ST1 copy                                    :   2862.3 MB/s (0.2%)
 NEON STP fill                                        :   4825.2 MB/s (0.3%)
 NEON STNP fill                                       :   4783.4 MB/s (0.6%)
 ARM LDP/STP copy                                     :   2855.1 MB/s
 ARM STP fill                                         :   4837.1 MB/s (0.4%)
 ARM STNP fill                                        :   4759.4 MB/s (0.4%)

==========================================================================
== Memory latency test                                                  ==
==                                                                      ==
== Average time is measured for random memory accesses in the buffers   ==
== of different sizes. The larger is the buffer, the more significant   ==
== are relative contributions of TLB, L1/L2 cache misses and SDRAM      ==
== accesses. For extremely large buffer sizes we are expecting to see   ==
== page table walk with several requests to SDRAM for almost every      ==
== memory access (though 64MiB is not nearly large enough to experience ==
== this effect to its fullest).                                         ==
==                                                                      ==
== Note 1: All the numbers are representing extra time, which needs to  ==
==         be added to L1 cache latency. The cycle timings for L1 cache ==
==         latency can be usually found in the processor documentation. ==
== Note 2: Dual random read means that we are simultaneously performing ==
==         two independent memory accesses at a time. In the case if    ==
==         the memory subsystem can't handle multiple outstanding       ==
==         requests, dual random read has the same timings as two       ==
==         single reads performed one after another.                    ==
==========================================================================

block size : single random read / dual random read, [MADV_NOHUGEPAGE]
      1024 :    0.0 ns          /     0.0 ns 
      2048 :    0.0 ns          /     0.0 ns 
      4096 :    0.0 ns          /     0.0 ns 
      8192 :    0.0 ns          /     0.0 ns 
     16384 :    0.0 ns          /     0.0 ns 
     32768 :    0.0 ns          /     0.0 ns 
     65536 :    4.5 ns          /     7.2 ns 
    131072 :    6.8 ns          /     9.7 ns 
    262144 :    9.9 ns          /    12.8 ns 
    524288 :   11.5 ns          /    14.7 ns 
   1048576 :   18.6 ns          /    25.4 ns 
   2097152 :  137.4 ns          /   210.7 ns 
   4194304 :  196.0 ns          /   263.1 ns 
   8388608 :  231.0 ns          /   288.7 ns 
  16777216 :  248.1 ns          /   298.4 ns 
  33554432 :  257.9 ns          /   304.6 ns 
  67108864 :  271.6 ns          /   319.1 ns 

block size : single random read / dual random read, [MADV_HUGEPAGE]
      1024 :    0.0 ns          /     0.0 ns 
      2048 :    0.0 ns          /     0.0 ns 
      4096 :    0.0 ns          /     0.0 ns 
      8192 :    0.0 ns          /     0.0 ns 
     16384 :    0.0 ns          /     0.0 ns 
     32768 :    0.0 ns          /     0.0 ns 
     65536 :    4.5 ns          /     7.2 ns 
    131072 :    6.8 ns          /     9.6 ns 
    262144 :    7.9 ns          /    10.6 ns 
    524288 :    8.5 ns          /    11.0 ns 
   1048576 :   13.9 ns          /    19.6 ns 
   2097152 :  133.2 ns          /   206.6 ns 
   4194304 :  189.5 ns          /   258.3 ns 
   8388608 :  216.6 ns          /   274.2 ns 
  16777216 :  229.3 ns          /   279.6 ns 
  33554432 :  236.3 ns          /   282.4 ns 
  67108864 :  243.0 ns          /   284.3 ns 

##########################################################################

OpenSSL 1.1.1, built on 11 Sep 2018
type             16 bytes     64 bytes    256 bytes   1024 bytes   8192 bytes  16384 bytes
aes-128-cbc     124059.79k   366771.07k   705389.48k   944110.59k  1053627.73k  1054130.18k
aes-128-cbc     358566.85k   808093.50k  1160590.25k  1280463.19k  1345404.93k  1349140.48k
aes-192-cbc     118391.59k   327252.20k   577606.40k   731893.08k   793070.25k   797037.91k
aes-192-cbc     337197.56k   739438.36k   985974.19k  1133392.21k  1182337.71k  1180303.36k
aes-256-cbc     114265.19k   301620.20k   500587.52k   612428.12k   654723.75k   657320.62k
aes-256-cbc     325899.46k   670990.81k   905224.53k   977886.55k  1018301.10k  1017380.86k

##########################################################################

7-Zip (a) [64] 16.02 : Copyright (c) 1999-2016 Igor Pavlov : 2016-05-21
p7zip Version 16.02 (locale=en_US.UTF-8,Utf16=on,HugeFiles=on,64 bits,6 CPUs LE)

LE
CPU Freq:  1346  1367  1405  1407  1406  1407  1404  1406  1405

RAM size:    1961 MB,  # CPU hardware threads:   6
RAM usage:   1323 MB,  # Benchmark threads:      6

                       Compressing  |                  Decompressing
Dict     Speed Usage    R/U Rating  |      Speed Usage    R/U Rating
         KiB/s     %   MIPS   MIPS  |      KiB/s     %   MIPS   MIPS

22:        648   100    631    630  |      14419   100   1231   1230
23:        636   100    649    649  |      14109   100   1222   1221
24:        627   100    676    675  |      13825   100   1215   1213
25:        618   100    707    706  |      13621   100   1212   1212
----------------------------------  | ------------------------------
Avr:             100    665    665  |              100   1220   1219
Tot:             100    943    942

7-Zip (a) [64] 16.02 : Copyright (c) 1999-2016 Igor Pavlov : 2016-05-21
p7zip Version 16.02 (locale=en_US.UTF-8,Utf16=on,HugeFiles=on,64 bits,6 CPUs LE)

LE
CPU Freq:  1784  1788  1792  1793  1793  1793  1793  1793  1793

RAM size:    1961 MB,  # CPU hardware threads:   6
RAM usage:   1323 MB,  # Benchmark threads:      6

                       Compressing  |                  Decompressing
Dict     Speed Usage    R/U Rating  |      Speed Usage    R/U Rating
         KiB/s     %   MIPS   MIPS  |      KiB/s     %   MIPS   MIPS

22:       1289   100   1255   1255  |      21145   100   1804   1803
23:       1265   100   1290   1289  |      20785   100   1799   1799
24:       1225   100   1318   1317  |      20319   100   1784   1784
25:       1212   100   1384   1384  |      19907   100   1772   1772
----------------------------------  | ------------------------------
Avr:             100   1312   1311  |              100   1790   1789
Tot:             100   1551   1550

##########################################################################

7-Zip (a) [64] 16.02 : Copyright (c) 1999-2016 Igor Pavlov : 2016-05-21
p7zip Version 16.02 (locale=en_US.UTF-8,Utf16=on,HugeFiles=on,64 bits,6 CPUs LE)

LE
CPU Freq:  1776  1785  1790  1791  1793  1793  1793  1793  1793

RAM size:    1961 MB,  # CPU hardware threads:   6
RAM usage:   1323 MB,  # Benchmark threads:      6

                       Compressing  |                  Decompressing
Dict     Speed Usage    R/U Rating  |      Speed Usage    R/U Rating
         KiB/s     %   MIPS   MIPS  |      KiB/s     %   MIPS   MIPS

22:       4262   437    949   4146  |      91184   524   1483   7776
23:       4811   508    966   4903  |      88861   524   1467   7689
24:       4145   481    926   4457  |      86551   523   1451   7597
25:       4067   488    951   4645  |      84715   525   1436   7539
----------------------------------  | ------------------------------
Avr:             479    948   4538  |              524   1460   7650
Tot:             501   1204   6094

7-Zip (a) [64] 16.02 : Copyright (c) 1999-2016 Igor Pavlov : 2016-05-21
p7zip Version 16.02 (locale=en_US.UTF-8,Utf16=on,HugeFiles=on,64 bits,6 CPUs LE)

LE
CPU Freq:  1788  1793  1793  1793  1793  1793  1793  1793  1793

RAM size:    1961 MB,  # CPU hardware threads:   6
RAM usage:   1323 MB,  # Benchmark threads:      6

                       Compressing  |                  Decompressing
Dict     Speed Usage    R/U Rating  |      Speed Usage    R/U Rating
         KiB/s     %   MIPS   MIPS  |      KiB/s     %   MIPS   MIPS

22:       4427   493    873   4307  |      91295   525   1484   7786
23:       4177   475    897   4256  |      88671   526   1460   7673
24:       4108   477    926   4418  |      86711   525   1451   7611
25:       4045   495    933   4619  |      84691   524   1438   7537
----------------------------------  | ------------------------------
Avr:             485    907   4400  |              525   1458   7652
Tot:             505   1183   6026

7-Zip (a) [64] 16.02 : Copyright (c) 1999-2016 Igor Pavlov : 2016-05-21
p7zip Version 16.02 (locale=en_US.UTF-8,Utf16=on,HugeFiles=on,64 bits,6 CPUs LE)

LE
CPU Freq:  1791  1793  1792  1793  1793  1793  1793  1793  1784

RAM size:    1961 MB,  # CPU hardware threads:   6
RAM usage:   1323 MB,  # Benchmark threads:      6

                       Compressing  |                  Decompressing
Dict     Speed Usage    R/U Rating  |      Speed Usage    R/U Rating
         KiB/s     %   MIPS   MIPS  |      KiB/s     %   MIPS   MIPS

22:       4548   472    938   4425  |      91221   525   1483   7779
23:       4469   477    956   4554  |      89207   525   1470   7719
24:       4197   507    891   4513  |      86905   527   1449   7628
25:       4439   526    964   5068  |      84544   524   1436   7524
----------------------------------  | ------------------------------
Avr:             495    937   4640  |              525   1460   7663
Tot:             510   1198   6151

Compression: 4538,4400,4640
Decompression: 7650,7652,7663
Total: 6094,6026,6151

##########################################################################

** cpuminer-multi 1.3.3 by tpruvot@github **
BTC donation address: 1FhDPLPpw18X4srecguG3MxJYe4a1JsZnd (tpruvot)

[2020-04-15 03:10:54] 6 miner threads started, using 'scrypt' algorithm.
[2020-04-15 03:10:54] CPU #5: 1.85 kH/s
[2020-04-15 03:10:54] CPU #4: 1.87 kH/s
[2020-04-15 03:10:55] CPU #1: 1.34 kH/s
[2020-04-15 03:10:55] CPU #0: 1.31 kH/s
[2020-04-15 03:10:55] CPU #3: 1.33 kH/s
[2020-04-15 03:10:55] CPU #2: 1.33 kH/s
[2020-04-15 03:10:59] Total: 9.28 kH/s
[2020-04-15 03:11:04] CPU #4: 2.07 kH/s
[2020-04-15 03:11:04] CPU #5: 1.99 kH/s
[2020-04-15 03:11:04] Total: 9.40 kH/s
[2020-04-15 03:11:04] CPU #0: 1.31 kH/s
[2020-04-15 03:11:04] CPU #2: 1.34 kH/s
[2020-04-15 03:11:04] CPU #3: 1.34 kH/s
[2020-04-15 03:11:04] CPU #1: 1.35 kH/s
[2020-04-15 03:11:09] Total: 9.50 kH/s
[2020-04-15 03:11:14] CPU #5: 2.09 kH/s
[2020-04-15 03:11:14] Total: 9.52 kH/s
[2020-04-15 03:11:14] CPU #4: 2.08 kH/s
[2020-04-15 03:11:14] CPU #0: 1.34 kH/s
[2020-04-15 03:11:14] CPU #2: 1.35 kH/s
[2020-04-15 03:11:14] CPU #3: 1.35 kH/s
[2020-04-15 03:11:14] CPU #1: 1.35 kH/s
[2020-04-15 03:11:19] Total: 9.55 kH/s
[2020-04-15 03:11:24] CPU #5: 2.08 kH/s
[2020-04-15 03:11:24] Total: 9.53 kH/s
[2020-04-15 03:11:24] CPU #4: 2.07 kH/s
[2020-04-15 03:11:24] CPU #0: 1.34 kH/s
[2020-04-15 03:11:24] CPU #2: 1.35 kH/s
[2020-04-15 03:11:24] CPU #3: 1.35 kH/s
[2020-04-15 03:11:24] CPU #1: 1.35 kH/s
[2020-04-15 03:11:29] Total: 9.53 kH/s
[2020-04-15 03:11:34] CPU #5: 2.09 kH/s
[2020-04-15 03:11:34] Total: 9.55 kH/s
[2020-04-15 03:11:34] CPU #4: 2.08 kH/s
[2020-04-15 03:11:34] CPU #0: 1.33 kH/s
[2020-04-15 03:11:34] CPU #2: 1.35 kH/s
[2020-04-15 03:11:34] CPU #3: 1.35 kH/s
[2020-04-15 03:11:34] CPU #1: 1.35 kH/s
[2020-04-15 03:11:39] Total: 9.54 kH/s
[2020-04-15 03:11:44] CPU #5: 2.09 kH/s
[2020-04-15 03:11:44] Total: 9.54 kH/s
[2020-04-15 03:11:44] CPU #4: 2.06 kH/s
[2020-04-15 03:11:44] CPU #0: 1.33 kH/s
[2020-04-15 03:11:44] CPU #2: 1.35 kH/s
[2020-04-15 03:11:44] CPU #3: 1.35 kH/s
[2020-04-15 03:11:44] CPU #1: 1.35 kH/s
[2020-04-15 03:11:49] Total: 9.52 kH/s
[2020-04-15 03:11:54] CPU #5: 2.09 kH/s
[2020-04-15 03:11:54] Total: 9.54 kH/s
[2020-04-15 03:11:54] CPU #4: 2.08 kH/s
[2020-04-15 03:11:54] CPU #0: 1.33 kH/s
[2020-04-15 03:11:54] CPU #2: 1.35 kH/s
[2020-04-15 03:11:54] CPU #3: 1.35 kH/s
[2020-04-15 03:11:54] CPU #1: 1.35 kH/s
[2020-04-15 03:11:59] Total: 9.55 kH/s
[2020-04-15 03:12:04] CPU #5: 2.09 kH/s
[2020-04-15 03:12:04] Total: 9.55 kH/s
[2020-04-15 03:12:04] CPU #4: 2.08 kH/s
[2020-04-15 03:12:04] CPU #0: 1.32 kH/s
[2020-04-15 03:12:04] CPU #2: 1.35 kH/s
[2020-04-15 03:12:04] CPU #3: 1.34 kH/s
[2020-04-15 03:12:04] CPU #1: 1.35 kH/s
[2020-04-15 03:12:09] Total: 9.48 kH/s
[2020-04-15 03:12:14] CPU #5: 2.09 kH/s
[2020-04-15 03:12:14] Total: 9.45 kH/s
[2020-04-15 03:12:14] CPU #4: 2.08 kH/s
[2020-04-15 03:12:14] CPU #0: 1.33 kH/s
[2020-04-15 03:12:14] CPU #2: 1.35 kH/s
[2020-04-15 03:12:14] CPU #3: 1.35 kH/s
[2020-04-15 03:12:14] CPU #1: 1.35 kH/s
[2020-04-15 03:12:19] Total: 9.55 kH/s
[2020-04-15 03:12:24] CPU #5: 2.09 kH/s
[2020-04-15 03:12:24] Total: 9.53 kH/s
[2020-04-15 03:12:24] CPU #4: 2.09 kH/s
[2020-04-15 03:12:24] CPU #0: 1.34 kH/s
[2020-04-15 03:12:24] CPU #2: 1.35 kH/s
[2020-04-15 03:12:24] CPU #3: 1.35 kH/s
[2020-04-15 03:12:24] CPU #1: 1.35 kH/s
[2020-04-15 03:12:29] Total: 9.56 kH/s
[2020-04-15 03:12:34] CPU #5: 2.09 kH/s
[2020-04-15 03:12:34] Total: 9.53 kH/s
[2020-04-15 03:12:34] CPU #4: 2.08 kH/s
[2020-04-15 03:12:34] CPU #0: 1.33 kH/s
[2020-04-15 03:12:34] CPU #2: 1.35 kH/s
[2020-04-15 03:12:34] CPU #3: 1.35 kH/s
[2020-04-15 03:12:34] CPU #1: 1.35 kH/s
[2020-04-15 03:12:39] Total: 9.54 kH/s
[2020-04-15 03:12:44] CPU #4: 2.09 kH/s
[2020-04-15 03:12:44] CPU #5: 2.08 kH/s
[2020-04-15 03:12:44] Total: 9.54 kH/s
[2020-04-15 03:12:44] CPU #0: 1.33 kH/s
[2020-04-15 03:12:44] CPU #2: 1.35 kH/s
[2020-04-15 03:12:44] CPU #3: 1.34 kH/s
[2020-04-15 03:12:44] CPU #1: 1.35 kH/s
[2020-04-15 03:12:49] Total: 9.55 kH/s
[2020-04-15 03:12:54] CPU #5: 2.08 kH/s
[2020-04-15 03:12:54] Total: 9.55 kH/s
[2020-04-15 03:12:54] CPU #4: 2.06 kH/s
[2020-04-15 03:12:54] CPU #0: 1.33 kH/s
[2020-04-15 03:12:54] CPU #2: 1.35 kH/s
[2020-04-15 03:12:54] CPU #3: 1.35 kH/s
[2020-04-15 03:12:54] CPU #1: 1.35 kH/s
[2020-04-15 03:12:59] Total: 9.54 kH/s
[2020-04-15 03:13:04] CPU #4: 2.09 kH/s
[2020-04-15 03:13:04] CPU #5: 2.08 kH/s
[2020-04-15 03:13:04] Total: 9.55 kH/s
[2020-04-15 03:13:04] CPU #0: 1.33 kH/s
[2020-04-15 03:13:04] CPU #2: 1.35 kH/s
[2020-04-15 03:13:04] CPU #3: 1.35 kH/s
[2020-04-15 03:13:04] CPU #1: 1.35 kH/s
[2020-04-15 03:13:09] Total: 9.46 kH/s
[2020-04-15 03:13:14] CPU #4: 2.07 kH/s
[2020-04-15 03:13:14] CPU #5: 2.07 kH/s
[2020-04-15 03:13:14] Total: 9.49 kH/s
[2020-04-15 03:13:14] CPU #0: 1.33 kH/s
[2020-04-15 03:13:14] CPU #2: 1.35 kH/s
[2020-04-15 03:13:14] CPU #3: 1.35 kH/s
[2020-04-15 03:13:14] CPU #1: 1.35 kH/s
[2020-04-15 03:13:19] Total: 9.53 kH/s
[2020-04-15 03:13:24] CPU #4: 2.09 kH/s
[2020-04-15 03:13:24] CPU #5: 2.09 kH/s
[2020-04-15 03:13:24] Total: 9.55 kH/s
[2020-04-15 03:13:24] CPU #0: 1.33 kH/s
[2020-04-15 03:13:24] CPU #2: 1.34 kH/s
[2020-04-15 03:13:24] CPU #3: 1.35 kH/s
[2020-04-15 03:13:24] CPU #1: 1.34 kH/s
[2020-04-15 03:13:29] Total: 9.55 kH/s
[2020-04-15 03:13:34] CPU #4: 2.09 kH/s
[2020-04-15 03:13:34] CPU #5: 2.09 kH/s
[2020-04-15 03:13:34] Total: 9.55 kH/s
[2020-04-15 03:13:34] CPU #0: 1.34 kH/s
[2020-04-15 03:13:34] CPU #2: 1.34 kH/s
[2020-04-15 03:13:34] CPU #3: 1.35 kH/s
[2020-04-15 03:13:34] CPU #1: 1.35 kH/s
[2020-04-15 03:13:39] Total: 9.55 kH/s
[2020-04-15 03:13:44] CPU #4: 2.09 kH/s
[2020-04-15 03:13:44] CPU #5: 2.09 kH/s
[2020-04-15 03:13:44] Total: 9.55 kH/s
[2020-04-15 03:13:44] CPU #0: 1.34 kH/s
[2020-04-15 03:13:44] CPU #2: 1.35 kH/s
[2020-04-15 03:13:44] CPU #3: 1.35 kH/s
[2020-04-15 03:13:44] CPU #1: 1.35 kH/s
[2020-04-15 03:13:49] Total: 9.56 kH/s
[2020-04-15 03:13:54] CPU #4: 2.09 kH/s
[2020-04-15 03:13:54] CPU #5: 2.09 kH/s
[2020-04-15 03:13:54] Total: 9.55 kH/s
[2020-04-15 03:13:54] CPU #0: 1.34 kH/s
[2020-04-15 03:13:54] CPU #2: 1.35 kH/s
[2020-04-15 03:13:54] CPU #3: 1.35 kH/s
[2020-04-15 03:13:54] CPU #1: 1.35 kH/s
[2020-04-15 03:13:59] Total: 9.55 kH/s
[2020-04-15 03:14:04] CPU #4: 2.07 kH/s
[2020-04-15 03:14:04] CPU #5: 2.07 kH/s
[2020-04-15 03:14:04] Total: 9.52 kH/s
[2020-04-15 03:14:04] CPU #0: 1.34 kH/s
[2020-04-15 03:14:04] CPU #2: 1.35 kH/s
[2020-04-15 03:14:04] CPU #3: 1.35 kH/s
[2020-04-15 03:14:04] CPU #1: 1.35 kH/s
[2020-04-15 03:14:09] Total: 9.53 kH/s
[2020-04-15 03:14:14] CPU #5: 2.04 kH/s
[2020-04-15 03:14:14] Total: 9.49 kH/s
[2020-04-15 03:14:14] CPU #4: 1.98 kH/s
[2020-04-15 03:14:14] CPU #0: 1.33 kH/s
[2020-04-15 03:14:14] CPU #2: 1.35 kH/s
[2020-04-15 03:14:14] CPU #3: 1.35 kH/s
[2020-04-15 03:14:14] CPU #1: 1.35 kH/s
[2020-04-15 03:14:19] Total: 9.54 kH/s
[2020-04-15 03:14:24] CPU #5: 2.08 kH/s
[2020-04-15 03:14:24] Total: 9.55 kH/s
[2020-04-15 03:14:24] CPU #4: 2.07 kH/s
[2020-04-15 03:14:24] CPU #0: 1.33 kH/s
[2020-04-15 03:14:24] CPU #2: 1.35 kH/s
[2020-04-15 03:14:24] CPU #3: 1.35 kH/s
[2020-04-15 03:14:24] CPU #1: 1.35 kH/s
[2020-04-15 03:14:29] Total: 9.55 kH/s
[2020-04-15 03:14:34] CPU #4: 2.09 kH/s
[2020-04-15 03:14:34] CPU #5: 2.09 kH/s
[2020-04-15 03:14:34] Total: 9.56 kH/s
[2020-04-15 03:14:34] CPU #0: 1.34 kH/s
[2020-04-15 03:14:34] CPU #2: 1.35 kH/s
[2020-04-15 03:14:34] CPU #3: 1.35 kH/s
[2020-04-15 03:14:34] CPU #1: 1.35 kH/s
[2020-04-15 03:14:39] Total: 9.55 kH/s
[2020-04-15 03:14:44] CPU #4: 2.08 kH/s
[2020-04-15 03:14:44] CPU #5: 2.09 kH/s
[2020-04-15 03:14:44] Total: 9.55 kH/s
[2020-04-15 03:14:44] CPU #0: 1.34 kH/s
[2020-04-15 03:14:44] CPU #2: 1.35 kH/s
[2020-04-15 03:14:44] CPU #3: 1.35 kH/s
[2020-04-15 03:14:44] CPU #1: 1.35 kH/s
[2020-04-15 03:14:49] Total: 9.56 kH/s
[2020-04-15 03:14:54] CPU #4: 2.08 kH/s
[2020-04-15 03:14:54] CPU #5: 2.09 kH/s
[2020-04-15 03:14:54] Total: 9.55 kH/s
[2020-04-15 03:14:54] CPU #0: 1.34 kH/s
[2020-04-15 03:14:54] CPU #2: 1.35 kH/s
[2020-04-15 03:14:54] CPU #3: 1.35 kH/s
[2020-04-15 03:14:54] CPU #1: 1.35 kH/s
[2020-04-15 03:14:59] Total: 9.55 kH/s
[2020-04-15 03:15:04] CPU #5: 2.09 kH/s
[2020-04-15 03:15:04] Total: 9.55 kH/s
[2020-04-15 03:15:04] CPU #4: 2.07 kH/s
[2020-04-15 03:15:04] CPU #0: 1.34 kH/s
[2020-04-15 03:15:04] CPU #2: 1.34 kH/s
[2020-04-15 03:15:04] CPU #3: 1.35 kH/s
[2020-04-15 03:15:04] CPU #1: 1.35 kH/s
[2020-04-15 03:15:09] Total: 9.54 kH/s
[2020-04-15 03:15:14] CPU #4: 2.08 kH/s
[2020-04-15 03:15:14] CPU #5: 2.08 kH/s
[2020-04-15 03:15:14] Total: 9.54 kH/s
[2020-04-15 03:15:14] CPU #0: 1.32 kH/s
[2020-04-15 03:15:14] CPU #2: 1.35 kH/s
[2020-04-15 03:15:14] CPU #3: 1.35 kH/s
[2020-04-15 03:15:14] CPU #1: 1.35 kH/s
[2020-04-15 03:15:19] Total: 9.43 kH/s
[2020-04-15 03:15:24] CPU #4: 2.08 kH/s
[2020-04-15 03:15:24] CPU #5: 2.09 kH/s
[2020-04-15 03:15:24] Total: 9.54 kH/s
[2020-04-15 03:15:24] CPU #0: 1.34 kH/s
[2020-04-15 03:15:24] CPU #2: 1.35 kH/s
[2020-04-15 03:15:24] CPU #3: 1.35 kH/s
[2020-04-15 03:15:24] CPU #1: 1.35 kH/s
[2020-04-15 03:15:29] Total: 9.56 kH/s
[2020-04-15 03:15:34] CPU #4: 2.07 kH/s
[2020-04-15 03:15:34] CPU #5: 2.07 kH/s
[2020-04-15 03:15:34] Total: 9.52 kH/s
[2020-04-15 03:15:34] CPU #0: 1.33 kH/s
[2020-04-15 03:15:34] CPU #2: 1.35 kH/s
[2020-04-15 03:15:34] CPU #3: 1.35 kH/s
[2020-04-15 03:15:34] CPU #1: 1.35 kH/s
[2020-04-15 03:15:39] Total: 9.55 kH/s
[2020-04-15 03:15:44] CPU #4: 2.09 kH/s
[2020-04-15 03:15:44] CPU #5: 2.09 kH/s
[2020-04-15 03:15:44] Total: 9.56 kH/s
[2020-04-15 03:15:44] CPU #0: 1.34 kH/s
[2020-04-15 03:15:44] CPU #2: 1.35 kH/s
[2020-04-15 03:15:44] CPU #3: 1.35 kH/s
[2020-04-15 03:15:44] CPU #1: 1.35 kH/s
[2020-04-15 03:15:49] Total: 9.56 kH/s
[2020-04-15 03:15:54] CPU #4: 2.09 kH/s
[2020-04-15 03:15:54] CPU #5: 2.08 kH/s
[2020-04-15 03:15:54] Total: 9.55 kH/s

Total Scores: 9.56,9.55,9.54,9.53,9.52,9.50,9.49,9.48,9.46,9.45,9.43,9.40,9.28

##########################################################################

Testing clockspeeds again. System health now:

Time       big.LITTLE   load %cpu %sys %usr %nice %io %irq   Temp
03:15:33: 1800/1416MHz  6.14 100%   0%  99%   0%   0%   0%  44.4°C

Checking cpufreq OPP for cpu0-cpu3:

Cpufreq OPP: 1416    Measured: 1406.216/1401.196/1408.256
Cpufreq OPP: 1200    Measured: 1187.104/1189.729/1190.648
Cpufreq OPP: 1008    Measured: 996.016/999.086/998.808
Cpufreq OPP:  816    Measured: 801.634/802.959/802.539
Cpufreq OPP:  600    Measured: 588.923/588.445/586.683
Cpufreq OPP:  408    Measured: 398.639/399.353/401.633

Checking cpufreq OPP for cpu4-cpu5:

Cpufreq OPP: 1800    Measured: 1067.853/1166.488/1797.699
Cpufreq OPP: 1608    Measured: 1638.792/1597.474/1591.744
Cpufreq OPP: 1416    Measured: 1445.329/1407.135/1469.040
Cpufreq OPP: 1200    Measured: 556.947/1330.247/1188.156
Cpufreq OPP: 1008    Measured: 505.828/997.454/995.342
Cpufreq OPP:  816    Measured: 697.350/524.038/944.469
Cpufreq OPP:  600    Measured: 754.833/591.288/590.064
Cpufreq OPP:  408    Measured: 520.359/400.694/396.940

##########################################################################

System health while running tinymembench:

Time       big.LITTLE   load %cpu %sys %usr %nice %io %irq   Temp
02:27:07: 1800/1416MHz  0.22  27%   0%  26%   0%   0%   0%  30.0°C
02:29:08: 1800/1416MHz  0.91  17%   0%  17%   0%   0%   0%  28.8°C
02:31:08: 1800/1416MHz  1.02  17%   0%  17%   0%   0%   0%  27.5°C
02:33:08: 1800/1416MHz  1.00  17%   0%  17%   0%   0%   0%  27.5°C
02:35:08: 1800/1416MHz  1.00  17%   0%  17%   0%   0%   0%  27.5°C
02:37:08: 1800/1416MHz  1.07  17%   0%  16%   0%   0%   0%  27.5°C
02:39:08: 1800/1416MHz  1.01  17%   0%  17%   0%   0%   0%  27.5°C
02:41:08: 1800/1416MHz  1.00  17%   0%  17%   0%   0%   0%  27.5°C
02:43:08: 1800/1416MHz  1.00  17%   0%  16%   0%   0%   0%  32.8°C
02:45:08: 1800/1416MHz  1.00  17%   0%  16%   0%   0%   0%  31.1°C
02:47:08: 1800/1416MHz  1.22  17%   0%  16%   0%   0%   0%  30.0°C
02:49:08: 1800/1416MHz  1.03  16%   0%  16%   0%   0%   0%  30.0°C
02:51:08: 1800/1416MHz  1.02  16%   0%  16%   0%   0%   0%  30.6°C
02:53:08: 1800/1416MHz  1.03  16%   0%  16%   0%   0%   0%  29.4°C

System health while running OpenSSL benchmark:

Time       big.LITTLE   load %cpu %sys %usr %nice %io %irq   Temp
02:55:07: 1800/1416MHz  1.13  25%   0%  24%   0%   0%   0%  30.6°C
02:55:18: 1800/1416MHz  1.11  17%   0%  17%   0%   0%   0%  28.8°C
02:55:28: 1800/1416MHz  1.09  17%   0%  17%   0%   0%   0%  31.7°C
02:55:38: 1800/1416MHz  1.08  17%   0%  16%   0%   0%   0%  31.7°C
02:55:48: 1800/1416MHz  1.06  17%   0%  16%   0%   0%   0%  29.4°C
02:55:58: 1800/1416MHz  1.05  17%   0%  16%   0%   0%   0%  28.8°C
02:56:08: 1800/1416MHz  1.04  16%   0%  16%   0%   0%   0%  32.2°C
02:56:18: 1800/1416MHz  1.04  16%   0%  16%   0%   0%   0%  32.2°C
02:56:28: 1800/1416MHz  1.03  17%   0%  17%   0%   0%   0%  29.4°C
02:56:38: 1800/1416MHz  1.03  17%   0%  16%   0%   0%   0%  30.6°C
02:56:48: 1800/1416MHz  1.02  16%   0%  16%   0%   0%   0%  32.2°C

System health while running 7-zip single core benchmark:

Time       big.LITTLE   load %cpu %sys %usr %nice %io %irq   Temp
02:56:56: 1800/1416MHz  1.02  25%   0%  24%   0%   0%   0%  32.8°C
02:57:56: 1800/1416MHz  3.61  17%   0%  16%   0%   0%   0%  28.8°C
02:58:56: 1800/1416MHz  4.47  17%   0%  16%   0%   0%   0%  28.1°C
02:59:56: 1800/1416MHz  3.81  17%   0%  16%   0%   0%   0%  27.5°C
03:00:56: 1800/1416MHz  3.89  17%   0%  16%   0%   0%   0%  26.9°C
03:01:56: 1800/1416MHz  3.50  17%   0%  16%   0%   0%   0%  27.5°C
03:02:56: 1800/1416MHz  3.65  17%   0%  16%   0%   0%   0%  27.5°C
03:03:56: 1800/1416MHz  4.67  17%   0%  16%   0%   0%   0%  31.7°C
03:04:56: 1800/1416MHz  4.63  17%   0%  16%   0%   0%   0%  31.1°C
03:05:56: 1800/1416MHz  4.10  17%   0%  16%   0%   0%   0%  31.7°C
03:06:56: 1800/1416MHz  4.04  17%   0%  16%   0%   0%   0%  30.6°C

System health while running 7-zip multi core benchmark:

Time       big.LITTLE   load %cpu %sys %usr %nice %io %irq   Temp
03:07:27: 1800/1416MHz  4.59  24%   0%  24%   0%   0%   0%  31.7°C
03:07:48: 1800/1416MHz  5.25  77%   0%  76%   0%   0%   0%  40.0°C
03:08:08: 1800/1416MHz  5.08  74%   1%  73%   0%   0%   0%  33.9°C
03:08:28: 1800/1416MHz  5.28  84%   1%  82%   0%   0%   0%  38.1°C
03:08:48: 1800/1416MHz  5.34  73%   0%  73%   0%   0%   0%  36.9°C
03:09:08: 1800/1416MHz  5.14  83%   1%  81%   0%   0%   0%  37.5°C
03:09:30: 1800/1416MHz  5.26  73%   1%  72%   0%   0%   0%  38.8°C
03:09:50: 1800/1416MHz  5.74  79%   1%  78%   0%   0%   0%  38.1°C
03:10:11: 1800/1416MHz  5.51  80%   0%  79%   0%   0%   0%  38.1°C
03:10:31: 1800/1416MHz  5.27  81%   1%  80%   0%   0%   0%  39.4°C
03:10:53: 1800/1416MHz  5.34  90%   1%  89%   0%   0%   0%  40.6°C

System health while running cpuminer:

Time       big.LITTLE   load %cpu %sys %usr %nice %io %irq   Temp
03:10:57: 1800/1416MHz  5.34  25%   0%  25%   0%   0%   0%  42.2°C
03:11:20: 1800/1416MHz  5.62 100%   0%  99%   0%   0%   0%  44.4°C
03:11:43: 1800/1416MHz  5.94 100%   0%  99%   0%   0%   0%  44.4°C
03:12:06: 1800/1416MHz  5.96 100%   0%  99%   0%   0%   0%  43.9°C
03:12:29: 1800/1416MHz  6.32 100%   0%  99%   0%   0%   0%  45.0°C
03:12:52: 1800/1416MHz  6.29 100%   0%  99%   0%   0%   0%  43.9°C
03:13:15: 1800/1416MHz  6.21 100%   0%  99%   0%   0%   0%  45.0°C
03:13:38: 1800/1416MHz  6.19 100%   0%  99%   0%   0%   0%  44.4°C
03:14:01: 1800/1416MHz  6.14 100%   0%  99%   0%   0%   0%  45.0°C
03:14:24: 1800/1416MHz  6.15 100%   0%  99%   0%   0%   0%  44.4°C
03:14:46: 1800/1416MHz  6.10 100%   0%  99%   0%   0%   0%  44.4°C
03:15:10: 1800/1416MHz  6.12 100%   0%  99%   0%   0%   0%  44.4°C
03:15:33: 1800/1416MHz  6.14 100%   0%  99%   0%   0%   0%  44.4°C

##########################################################################

Linux 4.4.179 (NanoPi-M4) 	04/15/20 	_aarch64_	(6 CPU)

avg-cpu:  %user   %nice %system %iowait  %steal   %idle
          27.82    0.00    0.32    0.11    0.00   71.75

Device             tps    kB_read/s    kB_wrtn/s    kB_read    kB_wrtn
loop0             0.00         0.00         0.00          8          0
mmcblk0           1.08        29.79         3.63     293930      35776

              total        used        free      shared  buff/cache   available
Mem:           1.9G        339M        1.3G         17M        284M        1.5G
Swap:            0B          0B          0B



Architecture:        aarch64
Byte Order:          Little Endian
CPU(s):              6
On-line CPU(s) list: 0-5
Thread(s) per core:  1
Core(s) per socket:  3
Socket(s):           2
Vendor ID:           ARM
Model:               4
Model name:          Cortex-A53
Stepping:            r0p4
CPU max MHz:         1800.0000
CPU min MHz:         408.0000
BogoMIPS:            48.00
Flags:               fp asimd evtstrm aes pmull sha1 sha2 crc32


